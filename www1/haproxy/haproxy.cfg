global
	log         127.0.0.1 local2 info

	chroot      /var/lib/haproxy
	pidfile     /var/run/haproxy.pid
	stats socket           /var/run/haproxy.sock mode 666 level admin
	maxconn     4000
	user        haproxy
	group       haproxy
	daemon

	stats socket /var/lib/haproxy/stats

defaults
	mode                    http
	log                     global
	#no option               http-use-htx # HTTP2 표준처럼 헤더를 모두 lower로 처리하는 것 방지
	option                  forwardfor
	option                  httplog
	option                  dontlognull
	option                  http-server-close
	retries                 3
	timeout http-request    10s
	timeout queue           1m
	timeout connect         10s
	timeout client          1m
	timeout server          1m
	timeout http-keep-alive 10s
	timeout check           10s
	maxconn                 3000

listen stats
	bind :::8888 v4v6
	mode http
	stats enable
	stats hide-version
	stats uri /
	stats realm Haproxy\ Statistics
	stats auth hunature:bns0705

#frontend  main
#	bind :::80 v4v6
#	option                      http-server-close
#	#http-request redirect scheme https unless { ssl_fc }
#	use_backend %[req.hdr(host),lower,map_dom(/etc/haproxy/domain2backend.map,default)]
#	default_backend             default


frontend  https-in
	bind :::443 v4v6 ssl crt /etc/haproxy/ssl/ ciphers !EDH:!RC4:!ADH:!DSS:HIGH:+AES128:+AES256-SHA256:+AES128-SHA256:+SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
	mode                        http
	option                      forwardfor
	option                      http-server-close
	#http-response add-header   Strict-Transport-Security "max-age=31536000; includeSubDomains"
	#http-response add-header   Strict-Transport-Security "max-age=31536000"
	#http-response add-header   X-Frame-Option "DENY"
	http-request set-header X-Forwarded-Proto https if { ssl_fc }
	http-request set-header X-Forwarded-Proto http if !{ ssl_fc }
	use_backend %[ssl_fc_sni,lower,map_dom(/etc/haproxy/domain2backend.map,default)]
	default_backend             default


backend default
	balance     roundrobin
	server  server1 192.168.0.12:13000 check
	#server  home2 192.168.0.11:13000 check

backend qr_user
	balance     roundrobin
	server  server1 192.168.0.12:30080 check
	#server  home2 192.168.0.11:8080 check

backend qr_buyer
	balance     roundrobin
	server  server1 192.168.0.12:30081 check
	#server  home2 192.168.0.11:8080 check

backend qr_manager
	balance     roundrobin
	server  server1 192.168.0.12:30082 check
	#server  home2 192.168.0.11:8080 check

backend acnt
	balance     roundrobin
	server  server1 192.168.0.12:23231 check
	#server  server2 192.168.0.12:23232 check

backend ace
	balance     roundrobin
	server  server1 192.168.0.12:38003 check
	#server  server2 192.168.0.12:38003 check

backend flpd
	balance     roundrobin
	server  server1 192.168.0.12:38005 check
	#server  server2 192.168.0.12:38005 check

backend dtsewoon
	balance     roundrobin
	server  server1 192.168.0.12:8080 check
	#server  server2 192.168.0.12:8080 check

backend weapi
	balance     roundrobin
	server  server1 192.168.0.12:36080 check
	#server  server2 192.168.0.12:36080 check

backend wiki
	balance     roundrobin
	server  server1 192.168.0.12:14000 check
	#server  server2 192.168.0.12:14000 check
